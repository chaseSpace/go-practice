# 官网安装：https://golangci-lint.run/welcome/install/
# 配置文档：https://golangci-lint.run/usage/configuration/
# 误报解决：https://golangci-lint.run/usage/false-positives/

run:
  # Number of operating system threads (`GOMAXPROCS`) that can execute golangci-lint simultaneously.
  # If it is explicitly set to 0 (i.e. not the default) then golangci-lint will automatically set the value to match Linux container CPU quota.
  # Default: the number of logical CPUs in the machine
  concurrency: 4
  # Timeout for analysis, e.g. 30s, 5m.
  # Default: 1m
  timeout: 20s
  # Exit code when at least one issue was found.
  # Default: 1
  issues-exit-code: 1
  # Include test files or not.
  # Default: true
  tests: true
  # List of build tags, all linters use it.
  # Default: []
  #  build-tags:
  #    - mytag
  # If set, we pass it to "go list -mod={option}". From "go help modules":
  # If invoked with -mod=readonly, the go command is disallowed from the implicit
  # automatic updating of go.mod described above. Instead, it fails when any changes
  # to go.mod are needed. This setting is most useful to check that go.mod does
  # not need updates, such as in a continuous integration and testing system.
  # If invoked with -mod=vendor, the go command assumes that the vendor
  # directory holds the correct copies of dependencies and ignores
  # the dependency descriptions in go.mod.
  #
  # Allowed values: readonly|vendor|mod
  # Default: ""
  modules-download-mode: mod
  # Allow multiple parallel golangci-lint instances running.
  # If false, golangci-lint acquires file lock on start.
  # Default: false
  allow-parallel-runners: true
  # Allow multiple golangci-lint instances running, but serialize them around a lock.
  # If false, golangci-lint exits with an error if it fails to acquire file lock on start.
  # Default: false
  allow-serial-runners: true
# output configuration options
output:
  formats:
    - format: colored-line-number
      path: stdout
  sort-results: true
  sort-order:
    - linter
    - severity
    - file
  show-stats: true

# 关键的linter配置：https://golangci-lint.run/usage/linters
# 查看配置启用/禁用的linters：golangci-lint help linters

# 针对某些linter的特定配置：https://golangci-lint.run/usage/linters#linters-configuration
linters-settings:
  errcheck:
    exclude-functions:
      - os.Setenv
  staticcheck:
    checks:
      - "-SA9003"
linters:
  #  disable-all: true
  enable:
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - typecheck
    - asciicheck
#    - unused

issues:
  exclude-use-default: true
  # Enables exclude of directories:
  # - vendor$, third_party$, testdata$, examples$, Godeps$, builtin$
  # Default: true
  exclude-dirs-use-default: true
  exclude-generated-strict: true
  # The list of ids of default excludes to include or disable.
  # https://golangci-lint.run/usage/false-positives/#default-exclusions
  # Default: []
  include:
    - xxx

#  exclude-files:
#    - ".*\\.my\\.go$"
#    - lib/bad.go
#  exclude-dirs:
#    - src/external_libs
#    - autogenerated_by_my_lib
#  fix: true

# 问题严重程度
severity:
  # Set the default severity for issues.
  #
  # If severity rules are defined and the issues do not match or no severity is provided to the rule
  # this will be the default severity applied.
  # Severities should match the supported severity names of the selected out format.
  # - Code climate: https://docs.codeclimate.com/docs/issues#issue-severity
  # - Checkstyle: https://checkstyle.sourceforge.io/property_types.html#SeverityLevel
  # - GitHub: https://help.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-error-message
  # - TeamCity: https://www.jetbrains.com/help/teamcity/service-messages.html#Inspection+Instance
  #
  # `@linter` can be used as severity value to keep the severity from linters (e.g. revive, gosec, ...)
  #
  # Default: "", 可选 ignore|info|warning|error
  default-severity: ""
  # If set to true `severity-rules` regular expressions become case-sensitive.
  # Default: false
  case-sensitive: true

  # 配置 linters 严重程度
#  rules:
#    - linters:
#        - errcheck
#      severity: error