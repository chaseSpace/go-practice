// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package billing

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListFinancialRelationCommon = "ListFinancialRelation"

// ListFinancialRelationCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListFinancialRelationCommon operation. The "output" return
// value will be populated with the ListFinancialRelationCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListFinancialRelationCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListFinancialRelationCommon Send returns without error.
//
// See ListFinancialRelationCommon for more information on using the ListFinancialRelationCommon
// API call, and error handling.
//
//    // Example sending a request using the ListFinancialRelationCommonRequest method.
//    req, resp := client.ListFinancialRelationCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) ListFinancialRelationCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListFinancialRelationCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListFinancialRelationCommon API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation ListFinancialRelationCommon for usage and error information.
func (c *BILLING) ListFinancialRelationCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListFinancialRelationCommonRequest(input)
	return out, req.Send()
}

// ListFinancialRelationCommonWithContext is the same as ListFinancialRelationCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListFinancialRelationCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) ListFinancialRelationCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListFinancialRelationCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListFinancialRelation = "ListFinancialRelation"

// ListFinancialRelationRequest generates a "volcengine/request.Request" representing the
// client's request for the ListFinancialRelation operation. The "output" return
// value will be populated with the ListFinancialRelationCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListFinancialRelationCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListFinancialRelationCommon Send returns without error.
//
// See ListFinancialRelation for more information on using the ListFinancialRelation
// API call, and error handling.
//
//    // Example sending a request using the ListFinancialRelationRequest method.
//    req, resp := client.ListFinancialRelationRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) ListFinancialRelationRequest(input *ListFinancialRelationInput) (req *request.Request, output *ListFinancialRelationOutput) {
	op := &request.Operation{
		Name:       opListFinancialRelation,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListFinancialRelationInput{}
	}

	output = &ListFinancialRelationOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListFinancialRelation API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation ListFinancialRelation for usage and error information.
func (c *BILLING) ListFinancialRelation(input *ListFinancialRelationInput) (*ListFinancialRelationOutput, error) {
	req, out := c.ListFinancialRelationRequest(input)
	return out, req.Send()
}

// ListFinancialRelationWithContext is the same as ListFinancialRelation with the addition of
// the ability to pass a context and additional request options.
//
// See ListFinancialRelation for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) ListFinancialRelationWithContext(ctx volcengine.Context, input *ListFinancialRelationInput, opts ...request.Option) (*ListFinancialRelationOutput, error) {
	req, out := c.ListFinancialRelationRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AuthInfoForListFinancialRelationOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AuthID *string `type:"string" json:",omitempty"`

	AuthList []*int32 `type:"list" json:",omitempty"`

	AuthStatus *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s AuthInfoForListFinancialRelationOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AuthInfoForListFinancialRelationOutput) GoString() string {
	return s.String()
}

// SetAuthID sets the AuthID field's value.
func (s *AuthInfoForListFinancialRelationOutput) SetAuthID(v string) *AuthInfoForListFinancialRelationOutput {
	s.AuthID = &v
	return s
}

// SetAuthList sets the AuthList field's value.
func (s *AuthInfoForListFinancialRelationOutput) SetAuthList(v []*int32) *AuthInfoForListFinancialRelationOutput {
	s.AuthList = v
	return s
}

// SetAuthStatus sets the AuthStatus field's value.
func (s *AuthInfoForListFinancialRelationOutput) SetAuthStatus(v int32) *AuthInfoForListFinancialRelationOutput {
	s.AuthStatus = &v
	return s
}

type ListFinancialRelationInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountIDSearchList []*string `type:"list" json:",omitempty"`

	Limit *int32 `type:"int32" json:",omitempty"`

	Offset *int32 `type:"int32" json:",omitempty"`

	Relation []*string `type:"list" json:",omitempty"`

	Status []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListFinancialRelationInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListFinancialRelationInput) GoString() string {
	return s.String()
}

// SetAccountIDSearchList sets the AccountIDSearchList field's value.
func (s *ListFinancialRelationInput) SetAccountIDSearchList(v []*string) *ListFinancialRelationInput {
	s.AccountIDSearchList = v
	return s
}

// SetLimit sets the Limit field's value.
func (s *ListFinancialRelationInput) SetLimit(v int32) *ListFinancialRelationInput {
	s.Limit = &v
	return s
}

// SetOffset sets the Offset field's value.
func (s *ListFinancialRelationInput) SetOffset(v int32) *ListFinancialRelationInput {
	s.Offset = &v
	return s
}

// SetRelation sets the Relation field's value.
func (s *ListFinancialRelationInput) SetRelation(v []*string) *ListFinancialRelationInput {
	s.Relation = v
	return s
}

// SetStatus sets the Status field's value.
func (s *ListFinancialRelationInput) SetStatus(v []*string) *ListFinancialRelationInput {
	s.Status = v
	return s
}

type ListFinancialRelationOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Limit *int32 `type:"int32" json:",omitempty"`

	List []*ListForListFinancialRelationOutput `type:"list" json:",omitempty"`

	Offset *int32 `type:"int32" json:",omitempty"`

	Total *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListFinancialRelationOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListFinancialRelationOutput) GoString() string {
	return s.String()
}

// SetLimit sets the Limit field's value.
func (s *ListFinancialRelationOutput) SetLimit(v int32) *ListFinancialRelationOutput {
	s.Limit = &v
	return s
}

// SetList sets the List field's value.
func (s *ListFinancialRelationOutput) SetList(v []*ListForListFinancialRelationOutput) *ListFinancialRelationOutput {
	s.List = v
	return s
}

// SetOffset sets the Offset field's value.
func (s *ListFinancialRelationOutput) SetOffset(v int32) *ListFinancialRelationOutput {
	s.Offset = &v
	return s
}

// SetTotal sets the Total field's value.
func (s *ListFinancialRelationOutput) SetTotal(v int32) *ListFinancialRelationOutput {
	s.Total = &v
	return s
}

type ListForListFinancialRelationOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountAlias *string `type:"string" json:",omitempty"`

	AuthInfo []*AuthInfoForListFinancialRelationOutput `type:"list" json:",omitempty"`

	Filiation *int32 `type:"int32" json:",omitempty"`

	FiliationDesc *string `type:"string" json:",omitempty"`

	MajorAccountID *int64 `type:"int64" json:",omitempty"`

	MajorAccountName *string `type:"string" json:",omitempty"`

	Relation *int32 `type:"int32" json:",omitempty"`

	RelationDesc *string `type:"string" json:",omitempty"`

	RelationID *string `type:"string" json:",omitempty"`

	Status *int32 `type:"int32" json:",omitempty"`

	StatusDesc *string `type:"string" json:",omitempty"`

	SubAccountID *int64 `type:"int64" json:",omitempty"`

	SubAccountName *string `type:"string" json:",omitempty"`

	UpdateTime *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListForListFinancialRelationOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListForListFinancialRelationOutput) GoString() string {
	return s.String()
}

// SetAccountAlias sets the AccountAlias field's value.
func (s *ListForListFinancialRelationOutput) SetAccountAlias(v string) *ListForListFinancialRelationOutput {
	s.AccountAlias = &v
	return s
}

// SetAuthInfo sets the AuthInfo field's value.
func (s *ListForListFinancialRelationOutput) SetAuthInfo(v []*AuthInfoForListFinancialRelationOutput) *ListForListFinancialRelationOutput {
	s.AuthInfo = v
	return s
}

// SetFiliation sets the Filiation field's value.
func (s *ListForListFinancialRelationOutput) SetFiliation(v int32) *ListForListFinancialRelationOutput {
	s.Filiation = &v
	return s
}

// SetFiliationDesc sets the FiliationDesc field's value.
func (s *ListForListFinancialRelationOutput) SetFiliationDesc(v string) *ListForListFinancialRelationOutput {
	s.FiliationDesc = &v
	return s
}

// SetMajorAccountID sets the MajorAccountID field's value.
func (s *ListForListFinancialRelationOutput) SetMajorAccountID(v int64) *ListForListFinancialRelationOutput {
	s.MajorAccountID = &v
	return s
}

// SetMajorAccountName sets the MajorAccountName field's value.
func (s *ListForListFinancialRelationOutput) SetMajorAccountName(v string) *ListForListFinancialRelationOutput {
	s.MajorAccountName = &v
	return s
}

// SetRelation sets the Relation field's value.
func (s *ListForListFinancialRelationOutput) SetRelation(v int32) *ListForListFinancialRelationOutput {
	s.Relation = &v
	return s
}

// SetRelationDesc sets the RelationDesc field's value.
func (s *ListForListFinancialRelationOutput) SetRelationDesc(v string) *ListForListFinancialRelationOutput {
	s.RelationDesc = &v
	return s
}

// SetRelationID sets the RelationID field's value.
func (s *ListForListFinancialRelationOutput) SetRelationID(v string) *ListForListFinancialRelationOutput {
	s.RelationID = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ListForListFinancialRelationOutput) SetStatus(v int32) *ListForListFinancialRelationOutput {
	s.Status = &v
	return s
}

// SetStatusDesc sets the StatusDesc field's value.
func (s *ListForListFinancialRelationOutput) SetStatusDesc(v string) *ListForListFinancialRelationOutput {
	s.StatusDesc = &v
	return s
}

// SetSubAccountID sets the SubAccountID field's value.
func (s *ListForListFinancialRelationOutput) SetSubAccountID(v int64) *ListForListFinancialRelationOutput {
	s.SubAccountID = &v
	return s
}

// SetSubAccountName sets the SubAccountName field's value.
func (s *ListForListFinancialRelationOutput) SetSubAccountName(v string) *ListForListFinancialRelationOutput {
	s.SubAccountName = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *ListForListFinancialRelationOutput) SetUpdateTime(v string) *ListForListFinancialRelationOutput {
	s.UpdateTime = &v
	return s
}
