// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package billing

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opQueryBalanceAcctCommon = "QueryBalanceAcct"

// QueryBalanceAcctCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the QueryBalanceAcctCommon operation. The "output" return
// value will be populated with the QueryBalanceAcctCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned QueryBalanceAcctCommon Request to send the API call to the service.
// the "output" return value is not valid until after QueryBalanceAcctCommon Send returns without error.
//
// See QueryBalanceAcctCommon for more information on using the QueryBalanceAcctCommon
// API call, and error handling.
//
//    // Example sending a request using the QueryBalanceAcctCommonRequest method.
//    req, resp := client.QueryBalanceAcctCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) QueryBalanceAcctCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opQueryBalanceAcctCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// QueryBalanceAcctCommon API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation QueryBalanceAcctCommon for usage and error information.
func (c *BILLING) QueryBalanceAcctCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.QueryBalanceAcctCommonRequest(input)
	return out, req.Send()
}

// QueryBalanceAcctCommonWithContext is the same as QueryBalanceAcctCommon with the addition of
// the ability to pass a context and additional request options.
//
// See QueryBalanceAcctCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) QueryBalanceAcctCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.QueryBalanceAcctCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opQueryBalanceAcct = "QueryBalanceAcct"

// QueryBalanceAcctRequest generates a "volcengine/request.Request" representing the
// client's request for the QueryBalanceAcct operation. The "output" return
// value will be populated with the QueryBalanceAcctCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned QueryBalanceAcctCommon Request to send the API call to the service.
// the "output" return value is not valid until after QueryBalanceAcctCommon Send returns without error.
//
// See QueryBalanceAcct for more information on using the QueryBalanceAcct
// API call, and error handling.
//
//    // Example sending a request using the QueryBalanceAcctRequest method.
//    req, resp := client.QueryBalanceAcctRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) QueryBalanceAcctRequest(input *QueryBalanceAcctInput) (req *request.Request, output *QueryBalanceAcctOutput) {
	op := &request.Operation{
		Name:       opQueryBalanceAcct,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &QueryBalanceAcctInput{}
	}

	output = &QueryBalanceAcctOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// QueryBalanceAcct API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation QueryBalanceAcct for usage and error information.
func (c *BILLING) QueryBalanceAcct(input *QueryBalanceAcctInput) (*QueryBalanceAcctOutput, error) {
	req, out := c.QueryBalanceAcctRequest(input)
	return out, req.Send()
}

// QueryBalanceAcctWithContext is the same as QueryBalanceAcct with the addition of
// the ability to pass a context and additional request options.
//
// See QueryBalanceAcct for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) QueryBalanceAcctWithContext(ctx volcengine.Context, input *QueryBalanceAcctInput, opts ...request.Option) (*QueryBalanceAcctOutput, error) {
	req, out := c.QueryBalanceAcctRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type QueryBalanceAcctInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s QueryBalanceAcctInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s QueryBalanceAcctInput) GoString() string {
	return s.String()
}

type QueryBalanceAcctOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	AccountID *int32 `type:"int32" json:",omitempty"`

	ArrearsBalance *string `type:"string" json:",omitempty"`

	AvailableBalance *string `type:"string" json:",omitempty"`

	CashBalance *string `type:"string" json:",omitempty"`

	CreditLimit *string `type:"string" json:",omitempty"`

	FreezeAmount *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s QueryBalanceAcctOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s QueryBalanceAcctOutput) GoString() string {
	return s.String()
}

// SetAccountID sets the AccountID field's value.
func (s *QueryBalanceAcctOutput) SetAccountID(v int32) *QueryBalanceAcctOutput {
	s.AccountID = &v
	return s
}

// SetArrearsBalance sets the ArrearsBalance field's value.
func (s *QueryBalanceAcctOutput) SetArrearsBalance(v string) *QueryBalanceAcctOutput {
	s.ArrearsBalance = &v
	return s
}

// SetAvailableBalance sets the AvailableBalance field's value.
func (s *QueryBalanceAcctOutput) SetAvailableBalance(v string) *QueryBalanceAcctOutput {
	s.AvailableBalance = &v
	return s
}

// SetCashBalance sets the CashBalance field's value.
func (s *QueryBalanceAcctOutput) SetCashBalance(v string) *QueryBalanceAcctOutput {
	s.CashBalance = &v
	return s
}

// SetCreditLimit sets the CreditLimit field's value.
func (s *QueryBalanceAcctOutput) SetCreditLimit(v string) *QueryBalanceAcctOutput {
	s.CreditLimit = &v
	return s
}

// SetFreezeAmount sets the FreezeAmount field's value.
func (s *QueryBalanceAcctOutput) SetFreezeAmount(v string) *QueryBalanceAcctOutput {
	s.FreezeAmount = &v
	return s
}
