// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package billing

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListPackageUsageDetailsCommon = "ListPackageUsageDetails"

// ListPackageUsageDetailsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListPackageUsageDetailsCommon operation. The "output" return
// value will be populated with the ListPackageUsageDetailsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListPackageUsageDetailsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListPackageUsageDetailsCommon Send returns without error.
//
// See ListPackageUsageDetailsCommon for more information on using the ListPackageUsageDetailsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListPackageUsageDetailsCommonRequest method.
//    req, resp := client.ListPackageUsageDetailsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) ListPackageUsageDetailsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListPackageUsageDetailsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListPackageUsageDetailsCommon API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation ListPackageUsageDetailsCommon for usage and error information.
func (c *BILLING) ListPackageUsageDetailsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListPackageUsageDetailsCommonRequest(input)
	return out, req.Send()
}

// ListPackageUsageDetailsCommonWithContext is the same as ListPackageUsageDetailsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListPackageUsageDetailsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) ListPackageUsageDetailsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListPackageUsageDetailsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListPackageUsageDetails = "ListPackageUsageDetails"

// ListPackageUsageDetailsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListPackageUsageDetails operation. The "output" return
// value will be populated with the ListPackageUsageDetailsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListPackageUsageDetailsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListPackageUsageDetailsCommon Send returns without error.
//
// See ListPackageUsageDetails for more information on using the ListPackageUsageDetails
// API call, and error handling.
//
//    // Example sending a request using the ListPackageUsageDetailsRequest method.
//    req, resp := client.ListPackageUsageDetailsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) ListPackageUsageDetailsRequest(input *ListPackageUsageDetailsInput) (req *request.Request, output *ListPackageUsageDetailsOutput) {
	op := &request.Operation{
		Name:       opListPackageUsageDetails,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListPackageUsageDetailsInput{}
	}

	output = &ListPackageUsageDetailsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListPackageUsageDetails API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation ListPackageUsageDetails for usage and error information.
func (c *BILLING) ListPackageUsageDetails(input *ListPackageUsageDetailsInput) (*ListPackageUsageDetailsOutput, error) {
	req, out := c.ListPackageUsageDetailsRequest(input)
	return out, req.Send()
}

// ListPackageUsageDetailsWithContext is the same as ListPackageUsageDetails with the addition of
// the ability to pass a context and additional request options.
//
// See ListPackageUsageDetails for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) ListPackageUsageDetailsWithContext(ctx volcengine.Context, input *ListPackageUsageDetailsInput, opts ...request.Option) (*ListPackageUsageDetailsOutput, error) {
	req, out := c.ListPackageUsageDetailsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListForListPackageUsageDetailsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AfterAmount *string `type:"string" json:",omitempty"`

	BeforeAmount *string `type:"string" json:",omitempty"`

	BeginTime *string `type:"string" json:",omitempty"`

	ConfigurationCode *string `type:"string" json:",omitempty"`

	ConfigurationName *string `type:"string" json:",omitempty"`

	DeductBillingFactor *string `type:"string" json:",omitempty"`

	DeductionAccountID *string `type:"string" json:",omitempty"`

	DeductionAmount *string `type:"string" json:",omitempty"`

	DeductionCalculateFactor *string `type:"string" json:",omitempty"`

	DeductionElementCode *string `type:"string" json:",omitempty"`

	DeductionInstanceNo *string `type:"string" json:",omitempty"`

	DeductionInstanceUnit *string `type:"string" json:",omitempty"`

	DeductionProduct *string `type:"string" json:",omitempty"`

	DeductionRatio *string `type:"string" json:",omitempty"`

	DeductionRegionCode *string `type:"string" json:",omitempty"`

	DeductionSpecification *string `type:"string" json:",omitempty"`

	DeductionSpecificationUnit *string `type:"string" json:",omitempty"`

	DeductionTime *string `type:"string" json:",omitempty"`

	DeductionUseAmount *string `type:"string" json:",omitempty"`

	DeductionUserName *string `type:"string" json:",omitempty"`

	EndTime *string `type:"string" json:",omitempty"`

	InstanceName *string `type:"string" json:",omitempty"`

	InstanceNo *string `type:"string" json:",omitempty"`

	OwnerID *string `type:"string" json:",omitempty"`

	PackageType *string `type:"string" json:",omitempty" enum:"EnumOfPackageTypeForListPackageUsageDetailsOutput"`

	Product *string `type:"string" json:",omitempty"`

	ProductName *string `type:"string" json:",omitempty"`

	RegionCode *string `type:"string" json:",omitempty"`

	SpecCalculateFactor *string `type:"string" json:",omitempty"`

	Specification *string `type:"string" json:",omitempty"`

	SpecificationUnit *string `type:"string" json:",omitempty"`

	SubjectNo *string `type:"string" json:",omitempty"`

	Unit *string `type:"string" json:",omitempty"`

	UserName *string `type:"string" json:",omitempty"`

	ZoneCode *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListForListPackageUsageDetailsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListForListPackageUsageDetailsOutput) GoString() string {
	return s.String()
}

// SetAfterAmount sets the AfterAmount field's value.
func (s *ListForListPackageUsageDetailsOutput) SetAfterAmount(v string) *ListForListPackageUsageDetailsOutput {
	s.AfterAmount = &v
	return s
}

// SetBeforeAmount sets the BeforeAmount field's value.
func (s *ListForListPackageUsageDetailsOutput) SetBeforeAmount(v string) *ListForListPackageUsageDetailsOutput {
	s.BeforeAmount = &v
	return s
}

// SetBeginTime sets the BeginTime field's value.
func (s *ListForListPackageUsageDetailsOutput) SetBeginTime(v string) *ListForListPackageUsageDetailsOutput {
	s.BeginTime = &v
	return s
}

// SetConfigurationCode sets the ConfigurationCode field's value.
func (s *ListForListPackageUsageDetailsOutput) SetConfigurationCode(v string) *ListForListPackageUsageDetailsOutput {
	s.ConfigurationCode = &v
	return s
}

// SetConfigurationName sets the ConfigurationName field's value.
func (s *ListForListPackageUsageDetailsOutput) SetConfigurationName(v string) *ListForListPackageUsageDetailsOutput {
	s.ConfigurationName = &v
	return s
}

// SetDeductBillingFactor sets the DeductBillingFactor field's value.
func (s *ListForListPackageUsageDetailsOutput) SetDeductBillingFactor(v string) *ListForListPackageUsageDetailsOutput {
	s.DeductBillingFactor = &v
	return s
}

// SetDeductionAccountID sets the DeductionAccountID field's value.
func (s *ListForListPackageUsageDetailsOutput) SetDeductionAccountID(v string) *ListForListPackageUsageDetailsOutput {
	s.DeductionAccountID = &v
	return s
}

// SetDeductionAmount sets the DeductionAmount field's value.
func (s *ListForListPackageUsageDetailsOutput) SetDeductionAmount(v string) *ListForListPackageUsageDetailsOutput {
	s.DeductionAmount = &v
	return s
}

// SetDeductionCalculateFactor sets the DeductionCalculateFactor field's value.
func (s *ListForListPackageUsageDetailsOutput) SetDeductionCalculateFactor(v string) *ListForListPackageUsageDetailsOutput {
	s.DeductionCalculateFactor = &v
	return s
}

// SetDeductionElementCode sets the DeductionElementCode field's value.
func (s *ListForListPackageUsageDetailsOutput) SetDeductionElementCode(v string) *ListForListPackageUsageDetailsOutput {
	s.DeductionElementCode = &v
	return s
}

// SetDeductionInstanceNo sets the DeductionInstanceNo field's value.
func (s *ListForListPackageUsageDetailsOutput) SetDeductionInstanceNo(v string) *ListForListPackageUsageDetailsOutput {
	s.DeductionInstanceNo = &v
	return s
}

// SetDeductionInstanceUnit sets the DeductionInstanceUnit field's value.
func (s *ListForListPackageUsageDetailsOutput) SetDeductionInstanceUnit(v string) *ListForListPackageUsageDetailsOutput {
	s.DeductionInstanceUnit = &v
	return s
}

// SetDeductionProduct sets the DeductionProduct field's value.
func (s *ListForListPackageUsageDetailsOutput) SetDeductionProduct(v string) *ListForListPackageUsageDetailsOutput {
	s.DeductionProduct = &v
	return s
}

// SetDeductionRatio sets the DeductionRatio field's value.
func (s *ListForListPackageUsageDetailsOutput) SetDeductionRatio(v string) *ListForListPackageUsageDetailsOutput {
	s.DeductionRatio = &v
	return s
}

// SetDeductionRegionCode sets the DeductionRegionCode field's value.
func (s *ListForListPackageUsageDetailsOutput) SetDeductionRegionCode(v string) *ListForListPackageUsageDetailsOutput {
	s.DeductionRegionCode = &v
	return s
}

// SetDeductionSpecification sets the DeductionSpecification field's value.
func (s *ListForListPackageUsageDetailsOutput) SetDeductionSpecification(v string) *ListForListPackageUsageDetailsOutput {
	s.DeductionSpecification = &v
	return s
}

// SetDeductionSpecificationUnit sets the DeductionSpecificationUnit field's value.
func (s *ListForListPackageUsageDetailsOutput) SetDeductionSpecificationUnit(v string) *ListForListPackageUsageDetailsOutput {
	s.DeductionSpecificationUnit = &v
	return s
}

// SetDeductionTime sets the DeductionTime field's value.
func (s *ListForListPackageUsageDetailsOutput) SetDeductionTime(v string) *ListForListPackageUsageDetailsOutput {
	s.DeductionTime = &v
	return s
}

// SetDeductionUseAmount sets the DeductionUseAmount field's value.
func (s *ListForListPackageUsageDetailsOutput) SetDeductionUseAmount(v string) *ListForListPackageUsageDetailsOutput {
	s.DeductionUseAmount = &v
	return s
}

// SetDeductionUserName sets the DeductionUserName field's value.
func (s *ListForListPackageUsageDetailsOutput) SetDeductionUserName(v string) *ListForListPackageUsageDetailsOutput {
	s.DeductionUserName = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *ListForListPackageUsageDetailsOutput) SetEndTime(v string) *ListForListPackageUsageDetailsOutput {
	s.EndTime = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *ListForListPackageUsageDetailsOutput) SetInstanceName(v string) *ListForListPackageUsageDetailsOutput {
	s.InstanceName = &v
	return s
}

// SetInstanceNo sets the InstanceNo field's value.
func (s *ListForListPackageUsageDetailsOutput) SetInstanceNo(v string) *ListForListPackageUsageDetailsOutput {
	s.InstanceNo = &v
	return s
}

// SetOwnerID sets the OwnerID field's value.
func (s *ListForListPackageUsageDetailsOutput) SetOwnerID(v string) *ListForListPackageUsageDetailsOutput {
	s.OwnerID = &v
	return s
}

// SetPackageType sets the PackageType field's value.
func (s *ListForListPackageUsageDetailsOutput) SetPackageType(v string) *ListForListPackageUsageDetailsOutput {
	s.PackageType = &v
	return s
}

// SetProduct sets the Product field's value.
func (s *ListForListPackageUsageDetailsOutput) SetProduct(v string) *ListForListPackageUsageDetailsOutput {
	s.Product = &v
	return s
}

// SetProductName sets the ProductName field's value.
func (s *ListForListPackageUsageDetailsOutput) SetProductName(v string) *ListForListPackageUsageDetailsOutput {
	s.ProductName = &v
	return s
}

// SetRegionCode sets the RegionCode field's value.
func (s *ListForListPackageUsageDetailsOutput) SetRegionCode(v string) *ListForListPackageUsageDetailsOutput {
	s.RegionCode = &v
	return s
}

// SetSpecCalculateFactor sets the SpecCalculateFactor field's value.
func (s *ListForListPackageUsageDetailsOutput) SetSpecCalculateFactor(v string) *ListForListPackageUsageDetailsOutput {
	s.SpecCalculateFactor = &v
	return s
}

// SetSpecification sets the Specification field's value.
func (s *ListForListPackageUsageDetailsOutput) SetSpecification(v string) *ListForListPackageUsageDetailsOutput {
	s.Specification = &v
	return s
}

// SetSpecificationUnit sets the SpecificationUnit field's value.
func (s *ListForListPackageUsageDetailsOutput) SetSpecificationUnit(v string) *ListForListPackageUsageDetailsOutput {
	s.SpecificationUnit = &v
	return s
}

// SetSubjectNo sets the SubjectNo field's value.
func (s *ListForListPackageUsageDetailsOutput) SetSubjectNo(v string) *ListForListPackageUsageDetailsOutput {
	s.SubjectNo = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *ListForListPackageUsageDetailsOutput) SetUnit(v string) *ListForListPackageUsageDetailsOutput {
	s.Unit = &v
	return s
}

// SetUserName sets the UserName field's value.
func (s *ListForListPackageUsageDetailsOutput) SetUserName(v string) *ListForListPackageUsageDetailsOutput {
	s.UserName = &v
	return s
}

// SetZoneCode sets the ZoneCode field's value.
func (s *ListForListPackageUsageDetailsOutput) SetZoneCode(v string) *ListForListPackageUsageDetailsOutput {
	s.ZoneCode = &v
	return s
}

type ListPackageUsageDetailsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// DeductBeginTime is a required field
	DeductBeginTime *string `type:"string" json:",omitempty" required:"true"`

	// DeductEndTime is a required field
	DeductEndTime *string `type:"string" json:",omitempty" required:"true"`

	InstanceNo *string `type:"string" json:",omitempty"`

	// MaxResults is a required field
	MaxResults *string `type:"string" json:",omitempty" required:"true"`

	NextToken *string `type:"string" json:",omitempty"`

	// ResourceType is a required field
	ResourceType *string `type:"string" json:",omitempty" required:"true" enum:"EnumOfResourceTypeForListPackageUsageDetailsInput"`
}

// String returns the string representation
func (s ListPackageUsageDetailsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListPackageUsageDetailsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListPackageUsageDetailsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListPackageUsageDetailsInput"}
	if s.DeductBeginTime == nil {
		invalidParams.Add(request.NewErrParamRequired("DeductBeginTime"))
	}
	if s.DeductEndTime == nil {
		invalidParams.Add(request.NewErrParamRequired("DeductEndTime"))
	}
	if s.MaxResults == nil {
		invalidParams.Add(request.NewErrParamRequired("MaxResults"))
	}
	if s.ResourceType == nil {
		invalidParams.Add(request.NewErrParamRequired("ResourceType"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDeductBeginTime sets the DeductBeginTime field's value.
func (s *ListPackageUsageDetailsInput) SetDeductBeginTime(v string) *ListPackageUsageDetailsInput {
	s.DeductBeginTime = &v
	return s
}

// SetDeductEndTime sets the DeductEndTime field's value.
func (s *ListPackageUsageDetailsInput) SetDeductEndTime(v string) *ListPackageUsageDetailsInput {
	s.DeductEndTime = &v
	return s
}

// SetInstanceNo sets the InstanceNo field's value.
func (s *ListPackageUsageDetailsInput) SetInstanceNo(v string) *ListPackageUsageDetailsInput {
	s.InstanceNo = &v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListPackageUsageDetailsInput) SetMaxResults(v string) *ListPackageUsageDetailsInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListPackageUsageDetailsInput) SetNextToken(v string) *ListPackageUsageDetailsInput {
	s.NextToken = &v
	return s
}

// SetResourceType sets the ResourceType field's value.
func (s *ListPackageUsageDetailsInput) SetResourceType(v string) *ListPackageUsageDetailsInput {
	s.ResourceType = &v
	return s
}

type ListPackageUsageDetailsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	List []*ListForListPackageUsageDetailsOutput `type:"list" json:",omitempty"`

	NextToken *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListPackageUsageDetailsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListPackageUsageDetailsOutput) GoString() string {
	return s.String()
}

// SetList sets the List field's value.
func (s *ListPackageUsageDetailsOutput) SetList(v []*ListForListPackageUsageDetailsOutput) *ListPackageUsageDetailsOutput {
	s.List = v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListPackageUsageDetailsOutput) SetNextToken(v string) *ListPackageUsageDetailsOutput {
	s.NextToken = &v
	return s
}

const (
	// EnumOfPackageTypeForListPackageUsageDetailsOutputPeriodic is a EnumOfPackageTypeForListPackageUsageDetailsOutput enum value
	EnumOfPackageTypeForListPackageUsageDetailsOutputPeriodic = "Periodic"

	// EnumOfPackageTypeForListPackageUsageDetailsOutputDiminishing is a EnumOfPackageTypeForListPackageUsageDetailsOutput enum value
	EnumOfPackageTypeForListPackageUsageDetailsOutputDiminishing = "Diminishing"

	// EnumOfPackageTypeForListPackageUsageDetailsOutputHybrid is a EnumOfPackageTypeForListPackageUsageDetailsOutput enum value
	EnumOfPackageTypeForListPackageUsageDetailsOutputHybrid = "Hybrid"
)

const (
	// EnumOfResourceTypeForListPackageUsageDetailsInputPackage is a EnumOfResourceTypeForListPackageUsageDetailsInput enum value
	EnumOfResourceTypeForListPackageUsageDetailsInputPackage = "Package"

	// EnumOfResourceTypeForListPackageUsageDetailsInputRi is a EnumOfResourceTypeForListPackageUsageDetailsInput enum value
	EnumOfResourceTypeForListPackageUsageDetailsInputRi = "RI"

	// EnumOfResourceTypeForListPackageUsageDetailsInputRsc is a EnumOfResourceTypeForListPackageUsageDetailsInput enum value
	EnumOfResourceTypeForListPackageUsageDetailsInputRsc = "RSC"
)
