// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package billing

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListAvailableInstancesCommon = "ListAvailableInstances"

// ListAvailableInstancesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAvailableInstancesCommon operation. The "output" return
// value will be populated with the ListAvailableInstancesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAvailableInstancesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAvailableInstancesCommon Send returns without error.
//
// See ListAvailableInstancesCommon for more information on using the ListAvailableInstancesCommon
// API call, and error handling.
//
//    // Example sending a request using the ListAvailableInstancesCommonRequest method.
//    req, resp := client.ListAvailableInstancesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) ListAvailableInstancesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListAvailableInstancesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListAvailableInstancesCommon API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation ListAvailableInstancesCommon for usage and error information.
func (c *BILLING) ListAvailableInstancesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListAvailableInstancesCommonRequest(input)
	return out, req.Send()
}

// ListAvailableInstancesCommonWithContext is the same as ListAvailableInstancesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListAvailableInstancesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) ListAvailableInstancesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListAvailableInstancesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListAvailableInstances = "ListAvailableInstances"

// ListAvailableInstancesRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAvailableInstances operation. The "output" return
// value will be populated with the ListAvailableInstancesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAvailableInstancesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAvailableInstancesCommon Send returns without error.
//
// See ListAvailableInstances for more information on using the ListAvailableInstances
// API call, and error handling.
//
//    // Example sending a request using the ListAvailableInstancesRequest method.
//    req, resp := client.ListAvailableInstancesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) ListAvailableInstancesRequest(input *ListAvailableInstancesInput) (req *request.Request, output *ListAvailableInstancesOutput) {
	op := &request.Operation{
		Name:       opListAvailableInstances,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListAvailableInstancesInput{}
	}

	output = &ListAvailableInstancesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListAvailableInstances API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation ListAvailableInstances for usage and error information.
func (c *BILLING) ListAvailableInstances(input *ListAvailableInstancesInput) (*ListAvailableInstancesOutput, error) {
	req, out := c.ListAvailableInstancesRequest(input)
	return out, req.Send()
}

// ListAvailableInstancesWithContext is the same as ListAvailableInstances with the addition of
// the ability to pass a context and additional request options.
//
// See ListAvailableInstances for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) ListAvailableInstancesWithContext(ctx volcengine.Context, input *ListAvailableInstancesInput, opts ...request.Option) (*ListAvailableInstancesOutput, error) {
	req, out := c.ListAvailableInstancesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type InstanceListForListAvailableInstancesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountID *int32 `type:"int32" json:",omitempty"`

	BeginTime *string `type:"string" json:",omitempty"`

	ConfigurationCode *string `type:"string" json:",omitempty"`

	ExpiredTime *string `type:"string" json:",omitempty"`

	InstanceID *string `type:"string" json:",omitempty"`

	InstanceName *string `type:"string" json:",omitempty"`

	PaymentMethod *string `type:"string" json:",omitempty"`

	Product *string `type:"string" json:",omitempty"`

	RemainRenewTimes *string `type:"string" json:",omitempty"`

	RenewType *string `type:"string" json:",omitempty"`

	RenewalDurationUnit *string `type:"string" json:",omitempty"`

	RenewalTimes *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	SubStatus *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s InstanceListForListAvailableInstancesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceListForListAvailableInstancesOutput) GoString() string {
	return s.String()
}

// SetAccountID sets the AccountID field's value.
func (s *InstanceListForListAvailableInstancesOutput) SetAccountID(v int32) *InstanceListForListAvailableInstancesOutput {
	s.AccountID = &v
	return s
}

// SetBeginTime sets the BeginTime field's value.
func (s *InstanceListForListAvailableInstancesOutput) SetBeginTime(v string) *InstanceListForListAvailableInstancesOutput {
	s.BeginTime = &v
	return s
}

// SetConfigurationCode sets the ConfigurationCode field's value.
func (s *InstanceListForListAvailableInstancesOutput) SetConfigurationCode(v string) *InstanceListForListAvailableInstancesOutput {
	s.ConfigurationCode = &v
	return s
}

// SetExpiredTime sets the ExpiredTime field's value.
func (s *InstanceListForListAvailableInstancesOutput) SetExpiredTime(v string) *InstanceListForListAvailableInstancesOutput {
	s.ExpiredTime = &v
	return s
}

// SetInstanceID sets the InstanceID field's value.
func (s *InstanceListForListAvailableInstancesOutput) SetInstanceID(v string) *InstanceListForListAvailableInstancesOutput {
	s.InstanceID = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *InstanceListForListAvailableInstancesOutput) SetInstanceName(v string) *InstanceListForListAvailableInstancesOutput {
	s.InstanceName = &v
	return s
}

// SetPaymentMethod sets the PaymentMethod field's value.
func (s *InstanceListForListAvailableInstancesOutput) SetPaymentMethod(v string) *InstanceListForListAvailableInstancesOutput {
	s.PaymentMethod = &v
	return s
}

// SetProduct sets the Product field's value.
func (s *InstanceListForListAvailableInstancesOutput) SetProduct(v string) *InstanceListForListAvailableInstancesOutput {
	s.Product = &v
	return s
}

// SetRemainRenewTimes sets the RemainRenewTimes field's value.
func (s *InstanceListForListAvailableInstancesOutput) SetRemainRenewTimes(v string) *InstanceListForListAvailableInstancesOutput {
	s.RemainRenewTimes = &v
	return s
}

// SetRenewType sets the RenewType field's value.
func (s *InstanceListForListAvailableInstancesOutput) SetRenewType(v string) *InstanceListForListAvailableInstancesOutput {
	s.RenewType = &v
	return s
}

// SetRenewalDurationUnit sets the RenewalDurationUnit field's value.
func (s *InstanceListForListAvailableInstancesOutput) SetRenewalDurationUnit(v string) *InstanceListForListAvailableInstancesOutput {
	s.RenewalDurationUnit = &v
	return s
}

// SetRenewalTimes sets the RenewalTimes field's value.
func (s *InstanceListForListAvailableInstancesOutput) SetRenewalTimes(v string) *InstanceListForListAvailableInstancesOutput {
	s.RenewalTimes = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *InstanceListForListAvailableInstancesOutput) SetStatus(v string) *InstanceListForListAvailableInstancesOutput {
	s.Status = &v
	return s
}

// SetSubStatus sets the SubStatus field's value.
func (s *InstanceListForListAvailableInstancesOutput) SetSubStatus(v string) *InstanceListForListAvailableInstancesOutput {
	s.SubStatus = &v
	return s
}

type ListAvailableInstancesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BeginTimeEnd *string `type:"string" json:",omitempty"`

	BeginTimeStart *string `type:"string" json:",omitempty"`

	ExpiredTimeEnd *string `type:"string" json:",omitempty"`

	ExpiredTimeStart *string `type:"string" json:",omitempty"`

	InstanceIDs []*string `type:"list" json:",omitempty"`

	// MaxResults is a required field
	MaxResults *int32 `type:"int32" json:",omitempty" required:"true"`

	NextToken *string `type:"string" json:",omitempty"`

	Product *string `type:"string" json:",omitempty"`

	RenewType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListAvailableInstancesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAvailableInstancesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListAvailableInstancesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListAvailableInstancesInput"}
	if s.MaxResults == nil {
		invalidParams.Add(request.NewErrParamRequired("MaxResults"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBeginTimeEnd sets the BeginTimeEnd field's value.
func (s *ListAvailableInstancesInput) SetBeginTimeEnd(v string) *ListAvailableInstancesInput {
	s.BeginTimeEnd = &v
	return s
}

// SetBeginTimeStart sets the BeginTimeStart field's value.
func (s *ListAvailableInstancesInput) SetBeginTimeStart(v string) *ListAvailableInstancesInput {
	s.BeginTimeStart = &v
	return s
}

// SetExpiredTimeEnd sets the ExpiredTimeEnd field's value.
func (s *ListAvailableInstancesInput) SetExpiredTimeEnd(v string) *ListAvailableInstancesInput {
	s.ExpiredTimeEnd = &v
	return s
}

// SetExpiredTimeStart sets the ExpiredTimeStart field's value.
func (s *ListAvailableInstancesInput) SetExpiredTimeStart(v string) *ListAvailableInstancesInput {
	s.ExpiredTimeStart = &v
	return s
}

// SetInstanceIDs sets the InstanceIDs field's value.
func (s *ListAvailableInstancesInput) SetInstanceIDs(v []*string) *ListAvailableInstancesInput {
	s.InstanceIDs = v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListAvailableInstancesInput) SetMaxResults(v int32) *ListAvailableInstancesInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListAvailableInstancesInput) SetNextToken(v string) *ListAvailableInstancesInput {
	s.NextToken = &v
	return s
}

// SetProduct sets the Product field's value.
func (s *ListAvailableInstancesInput) SetProduct(v string) *ListAvailableInstancesInput {
	s.Product = &v
	return s
}

// SetRenewType sets the RenewType field's value.
func (s *ListAvailableInstancesInput) SetRenewType(v string) *ListAvailableInstancesInput {
	s.RenewType = &v
	return s
}

type ListAvailableInstancesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	InstanceList []*InstanceListForListAvailableInstancesOutput `type:"list" json:",omitempty"`

	MaxResults *int32 `type:"int32" json:",omitempty"`

	NextToken *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListAvailableInstancesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAvailableInstancesOutput) GoString() string {
	return s.String()
}

// SetInstanceList sets the InstanceList field's value.
func (s *ListAvailableInstancesOutput) SetInstanceList(v []*InstanceListForListAvailableInstancesOutput) *ListAvailableInstancesOutput {
	s.InstanceList = v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListAvailableInstancesOutput) SetMaxResults(v int32) *ListAvailableInstancesOutput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListAvailableInstancesOutput) SetNextToken(v string) *ListAvailableInstancesOutput {
	s.NextToken = &v
	return s
}
