// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package billing

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetOrderCommon = "GetOrder"

// GetOrderCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetOrderCommon operation. The "output" return
// value will be populated with the GetOrderCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetOrderCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetOrderCommon Send returns without error.
//
// See GetOrderCommon for more information on using the GetOrderCommon
// API call, and error handling.
//
//    // Example sending a request using the GetOrderCommonRequest method.
//    req, resp := client.GetOrderCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) GetOrderCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetOrderCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetOrderCommon API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation GetOrderCommon for usage and error information.
func (c *BILLING) GetOrderCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetOrderCommonRequest(input)
	return out, req.Send()
}

// GetOrderCommonWithContext is the same as GetOrderCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetOrderCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) GetOrderCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetOrderCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetOrder = "GetOrder"

// GetOrderRequest generates a "volcengine/request.Request" representing the
// client's request for the GetOrder operation. The "output" return
// value will be populated with the GetOrderCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetOrderCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetOrderCommon Send returns without error.
//
// See GetOrder for more information on using the GetOrder
// API call, and error handling.
//
//    // Example sending a request using the GetOrderRequest method.
//    req, resp := client.GetOrderRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) GetOrderRequest(input *GetOrderInput) (req *request.Request, output *GetOrderOutput) {
	op := &request.Operation{
		Name:       opGetOrder,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetOrderInput{}
	}

	output = &GetOrderOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetOrder API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation GetOrder for usage and error information.
func (c *BILLING) GetOrder(input *GetOrderInput) (*GetOrderOutput, error) {
	req, out := c.GetOrderRequest(input)
	return out, req.Send()
}

// GetOrderWithContext is the same as GetOrder with the addition of
// the ability to pass a context and additional request options.
//
// See GetOrder for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) GetOrderWithContext(ctx volcengine.Context, input *GetOrderInput, opts ...request.Option) (*GetOrderOutput, error) {
	req, out := c.GetOrderRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetOrderInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// OrderID is a required field
	OrderID *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s GetOrderInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetOrderInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetOrderInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetOrderInput"}
	if s.OrderID == nil {
		invalidParams.Add(request.NewErrParamRequired("OrderID"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetOrderID sets the OrderID field's value.
func (s *GetOrderInput) SetOrderID(v string) *GetOrderInput {
	s.OrderID = &v
	return s
}

type GetOrderOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	OrderInfo *OrderInfoForGetOrderOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s GetOrderOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetOrderOutput) GoString() string {
	return s.String()
}

// SetOrderInfo sets the OrderInfo field's value.
func (s *GetOrderOutput) SetOrderInfo(v *OrderInfoForGetOrderOutput) *GetOrderOutput {
	s.OrderInfo = v
	return s
}

type OrderFailRefundInfoForGetOrderOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CouponAmount *string `type:"string" json:",omitempty"`

	DiscountAmount *string `type:"string" json:",omitempty"`

	OriginalAmount *string `type:"string" json:",omitempty"`

	PaidAmount *string `type:"string" json:",omitempty"`

	PayableAmount *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s OrderFailRefundInfoForGetOrderOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s OrderFailRefundInfoForGetOrderOutput) GoString() string {
	return s.String()
}

// SetCouponAmount sets the CouponAmount field's value.
func (s *OrderFailRefundInfoForGetOrderOutput) SetCouponAmount(v string) *OrderFailRefundInfoForGetOrderOutput {
	s.CouponAmount = &v
	return s
}

// SetDiscountAmount sets the DiscountAmount field's value.
func (s *OrderFailRefundInfoForGetOrderOutput) SetDiscountAmount(v string) *OrderFailRefundInfoForGetOrderOutput {
	s.DiscountAmount = &v
	return s
}

// SetOriginalAmount sets the OriginalAmount field's value.
func (s *OrderFailRefundInfoForGetOrderOutput) SetOriginalAmount(v string) *OrderFailRefundInfoForGetOrderOutput {
	s.OriginalAmount = &v
	return s
}

// SetPaidAmount sets the PaidAmount field's value.
func (s *OrderFailRefundInfoForGetOrderOutput) SetPaidAmount(v string) *OrderFailRefundInfoForGetOrderOutput {
	s.PaidAmount = &v
	return s
}

// SetPayableAmount sets the PayableAmount field's value.
func (s *OrderFailRefundInfoForGetOrderOutput) SetPayableAmount(v string) *OrderFailRefundInfoForGetOrderOutput {
	s.PayableAmount = &v
	return s
}

type OrderInfoForGetOrderOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BuyerCustomerName *string `type:"string" json:",omitempty"`

	BuyerID *int32 `type:"int32" json:",omitempty"`

	CouponAmount *string `type:"string" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	DiscountAmount *string `type:"string" json:",omitempty"`

	OrderFailRefundInfo *OrderFailRefundInfoForGetOrderOutput `type:"structure" json:",omitempty"`

	OrderID *string `type:"string" json:",omitempty"`

	OrderType *string `type:"string" json:",omitempty"`

	OriginalAmount *string `type:"string" json:",omitempty"`

	PaidAmount *string `type:"string" json:",omitempty"`

	PayableAmount *string `type:"string" json:",omitempty"`

	PayerCustomerName *string `type:"string" json:",omitempty"`

	PayerID *int32 `type:"int32" json:",omitempty"`

	SellerCustomerName *string `type:"string" json:",omitempty"`

	SellerID *int32 `type:"int32" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	SubjectNo *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s OrderInfoForGetOrderOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s OrderInfoForGetOrderOutput) GoString() string {
	return s.String()
}

// SetBuyerCustomerName sets the BuyerCustomerName field's value.
func (s *OrderInfoForGetOrderOutput) SetBuyerCustomerName(v string) *OrderInfoForGetOrderOutput {
	s.BuyerCustomerName = &v
	return s
}

// SetBuyerID sets the BuyerID field's value.
func (s *OrderInfoForGetOrderOutput) SetBuyerID(v int32) *OrderInfoForGetOrderOutput {
	s.BuyerID = &v
	return s
}

// SetCouponAmount sets the CouponAmount field's value.
func (s *OrderInfoForGetOrderOutput) SetCouponAmount(v string) *OrderInfoForGetOrderOutput {
	s.CouponAmount = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *OrderInfoForGetOrderOutput) SetCreateTime(v string) *OrderInfoForGetOrderOutput {
	s.CreateTime = &v
	return s
}

// SetDiscountAmount sets the DiscountAmount field's value.
func (s *OrderInfoForGetOrderOutput) SetDiscountAmount(v string) *OrderInfoForGetOrderOutput {
	s.DiscountAmount = &v
	return s
}

// SetOrderFailRefundInfo sets the OrderFailRefundInfo field's value.
func (s *OrderInfoForGetOrderOutput) SetOrderFailRefundInfo(v *OrderFailRefundInfoForGetOrderOutput) *OrderInfoForGetOrderOutput {
	s.OrderFailRefundInfo = v
	return s
}

// SetOrderID sets the OrderID field's value.
func (s *OrderInfoForGetOrderOutput) SetOrderID(v string) *OrderInfoForGetOrderOutput {
	s.OrderID = &v
	return s
}

// SetOrderType sets the OrderType field's value.
func (s *OrderInfoForGetOrderOutput) SetOrderType(v string) *OrderInfoForGetOrderOutput {
	s.OrderType = &v
	return s
}

// SetOriginalAmount sets the OriginalAmount field's value.
func (s *OrderInfoForGetOrderOutput) SetOriginalAmount(v string) *OrderInfoForGetOrderOutput {
	s.OriginalAmount = &v
	return s
}

// SetPaidAmount sets the PaidAmount field's value.
func (s *OrderInfoForGetOrderOutput) SetPaidAmount(v string) *OrderInfoForGetOrderOutput {
	s.PaidAmount = &v
	return s
}

// SetPayableAmount sets the PayableAmount field's value.
func (s *OrderInfoForGetOrderOutput) SetPayableAmount(v string) *OrderInfoForGetOrderOutput {
	s.PayableAmount = &v
	return s
}

// SetPayerCustomerName sets the PayerCustomerName field's value.
func (s *OrderInfoForGetOrderOutput) SetPayerCustomerName(v string) *OrderInfoForGetOrderOutput {
	s.PayerCustomerName = &v
	return s
}

// SetPayerID sets the PayerID field's value.
func (s *OrderInfoForGetOrderOutput) SetPayerID(v int32) *OrderInfoForGetOrderOutput {
	s.PayerID = &v
	return s
}

// SetSellerCustomerName sets the SellerCustomerName field's value.
func (s *OrderInfoForGetOrderOutput) SetSellerCustomerName(v string) *OrderInfoForGetOrderOutput {
	s.SellerCustomerName = &v
	return s
}

// SetSellerID sets the SellerID field's value.
func (s *OrderInfoForGetOrderOutput) SetSellerID(v int32) *OrderInfoForGetOrderOutput {
	s.SellerID = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *OrderInfoForGetOrderOutput) SetStatus(v string) *OrderInfoForGetOrderOutput {
	s.Status = &v
	return s
}

// SetSubjectNo sets the SubjectNo field's value.
func (s *OrderInfoForGetOrderOutput) SetSubjectNo(v string) *OrderInfoForGetOrderOutput {
	s.SubjectNo = &v
	return s
}
