// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package billing

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListBillOverviewByProdCommon = "ListBillOverviewByProd"

// ListBillOverviewByProdCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListBillOverviewByProdCommon operation. The "output" return
// value will be populated with the ListBillOverviewByProdCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListBillOverviewByProdCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListBillOverviewByProdCommon Send returns without error.
//
// See ListBillOverviewByProdCommon for more information on using the ListBillOverviewByProdCommon
// API call, and error handling.
//
//    // Example sending a request using the ListBillOverviewByProdCommonRequest method.
//    req, resp := client.ListBillOverviewByProdCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) ListBillOverviewByProdCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListBillOverviewByProdCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListBillOverviewByProdCommon API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation ListBillOverviewByProdCommon for usage and error information.
func (c *BILLING) ListBillOverviewByProdCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListBillOverviewByProdCommonRequest(input)
	return out, req.Send()
}

// ListBillOverviewByProdCommonWithContext is the same as ListBillOverviewByProdCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListBillOverviewByProdCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) ListBillOverviewByProdCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListBillOverviewByProdCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListBillOverviewByProd = "ListBillOverviewByProd"

// ListBillOverviewByProdRequest generates a "volcengine/request.Request" representing the
// client's request for the ListBillOverviewByProd operation. The "output" return
// value will be populated with the ListBillOverviewByProdCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListBillOverviewByProdCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListBillOverviewByProdCommon Send returns without error.
//
// See ListBillOverviewByProd for more information on using the ListBillOverviewByProd
// API call, and error handling.
//
//    // Example sending a request using the ListBillOverviewByProdRequest method.
//    req, resp := client.ListBillOverviewByProdRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) ListBillOverviewByProdRequest(input *ListBillOverviewByProdInput) (req *request.Request, output *ListBillOverviewByProdOutput) {
	op := &request.Operation{
		Name:       opListBillOverviewByProd,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListBillOverviewByProdInput{}
	}

	output = &ListBillOverviewByProdOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListBillOverviewByProd API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation ListBillOverviewByProd for usage and error information.
func (c *BILLING) ListBillOverviewByProd(input *ListBillOverviewByProdInput) (*ListBillOverviewByProdOutput, error) {
	req, out := c.ListBillOverviewByProdRequest(input)
	return out, req.Send()
}

// ListBillOverviewByProdWithContext is the same as ListBillOverviewByProd with the addition of
// the ability to pass a context and additional request options.
//
// See ListBillOverviewByProd for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) ListBillOverviewByProdWithContext(ctx volcengine.Context, input *ListBillOverviewByProdInput, opts ...request.Option) (*ListBillOverviewByProdOutput, error) {
	req, out := c.ListBillOverviewByProdRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListBillOverviewByProdInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BillCategoryParent []*string `type:"list" json:",omitempty"`

	// BillPeriod is a required field
	BillPeriod *string `type:"string" json:",omitempty" required:"true"`

	BillingMode []*string `type:"list" json:",omitempty"`

	IgnoreZero *int32 `type:"int32" json:",omitempty"`

	// Limit is a required field
	Limit *int32 `type:"int32" json:",omitempty" required:"true"`

	NeedRecordNum *int32 `type:"int32" json:",omitempty"`

	Offset *int32 `type:"int32" json:",omitempty"`

	OwnerID []*int64 `type:"list" json:",omitempty"`

	PayerID []*int64 `type:"list" json:",omitempty"`

	Product []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListBillOverviewByProdInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBillOverviewByProdInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListBillOverviewByProdInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListBillOverviewByProdInput"}
	if s.BillPeriod == nil {
		invalidParams.Add(request.NewErrParamRequired("BillPeriod"))
	}
	if s.Limit == nil {
		invalidParams.Add(request.NewErrParamRequired("Limit"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBillCategoryParent sets the BillCategoryParent field's value.
func (s *ListBillOverviewByProdInput) SetBillCategoryParent(v []*string) *ListBillOverviewByProdInput {
	s.BillCategoryParent = v
	return s
}

// SetBillPeriod sets the BillPeriod field's value.
func (s *ListBillOverviewByProdInput) SetBillPeriod(v string) *ListBillOverviewByProdInput {
	s.BillPeriod = &v
	return s
}

// SetBillingMode sets the BillingMode field's value.
func (s *ListBillOverviewByProdInput) SetBillingMode(v []*string) *ListBillOverviewByProdInput {
	s.BillingMode = v
	return s
}

// SetIgnoreZero sets the IgnoreZero field's value.
func (s *ListBillOverviewByProdInput) SetIgnoreZero(v int32) *ListBillOverviewByProdInput {
	s.IgnoreZero = &v
	return s
}

// SetLimit sets the Limit field's value.
func (s *ListBillOverviewByProdInput) SetLimit(v int32) *ListBillOverviewByProdInput {
	s.Limit = &v
	return s
}

// SetNeedRecordNum sets the NeedRecordNum field's value.
func (s *ListBillOverviewByProdInput) SetNeedRecordNum(v int32) *ListBillOverviewByProdInput {
	s.NeedRecordNum = &v
	return s
}

// SetOffset sets the Offset field's value.
func (s *ListBillOverviewByProdInput) SetOffset(v int32) *ListBillOverviewByProdInput {
	s.Offset = &v
	return s
}

// SetOwnerID sets the OwnerID field's value.
func (s *ListBillOverviewByProdInput) SetOwnerID(v []*int64) *ListBillOverviewByProdInput {
	s.OwnerID = v
	return s
}

// SetPayerID sets the PayerID field's value.
func (s *ListBillOverviewByProdInput) SetPayerID(v []*int64) *ListBillOverviewByProdInput {
	s.PayerID = v
	return s
}

// SetProduct sets the Product field's value.
func (s *ListBillOverviewByProdInput) SetProduct(v []*string) *ListBillOverviewByProdInput {
	s.Product = v
	return s
}

type ListBillOverviewByProdOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Limit *int32 `type:"int32" json:",omitempty"`

	List []*ListForListBillOverviewByProdOutput `type:"list" json:",omitempty"`

	Offset *int32 `type:"int32" json:",omitempty"`

	Total *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListBillOverviewByProdOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBillOverviewByProdOutput) GoString() string {
	return s.String()
}

// SetLimit sets the Limit field's value.
func (s *ListBillOverviewByProdOutput) SetLimit(v int32) *ListBillOverviewByProdOutput {
	s.Limit = &v
	return s
}

// SetList sets the List field's value.
func (s *ListBillOverviewByProdOutput) SetList(v []*ListForListBillOverviewByProdOutput) *ListBillOverviewByProdOutput {
	s.List = v
	return s
}

// SetOffset sets the Offset field's value.
func (s *ListBillOverviewByProdOutput) SetOffset(v int32) *ListBillOverviewByProdOutput {
	s.Offset = &v
	return s
}

// SetTotal sets the Total field's value.
func (s *ListBillOverviewByProdOutput) SetTotal(v int32) *ListBillOverviewByProdOutput {
	s.Total = &v
	return s
}

type ListForListBillOverviewByProdOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BillCategoryParent *string `type:"string" json:",omitempty"`

	BillPeriod *string `type:"string" json:",omitempty"`

	BillingMode *string `type:"string" json:",omitempty"`

	BusinessMode *string `type:"string" json:",omitempty"`

	CouponAmount *string `type:"string" json:",omitempty"`

	CreditCarriedAmount *string `type:"string" json:",omitempty"`

	DiscountBillAmount *string `type:"string" json:",omitempty"`

	OriginalBillAmount *string `type:"string" json:",omitempty"`

	OwnerCustomerName *string `type:"string" json:",omitempty"`

	OwnerID *string `type:"string" json:",omitempty"`

	OwnerUserName *string `type:"string" json:",omitempty"`

	PaidAmount *string `type:"string" json:",omitempty"`

	PayableAmount *string `type:"string" json:",omitempty"`

	PayerCustomerName *string `type:"string" json:",omitempty"`

	PayerID *string `type:"string" json:",omitempty"`

	PayerUserName *string `type:"string" json:",omitempty"`

	PreferentialBillAmount *string `type:"string" json:",omitempty"`

	Product *string `type:"string" json:",omitempty"`

	ProductZh *string `type:"string" json:",omitempty"`

	RoundBillAmount *string `type:"string" json:",omitempty"`

	SellerCustomerName *string `type:"string" json:",omitempty"`

	SellerID *string `type:"string" json:",omitempty"`

	SellerUserName *string `type:"string" json:",omitempty"`

	SettlementType *string `type:"string" json:",omitempty"`

	UnpaidAmount *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListForListBillOverviewByProdOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListForListBillOverviewByProdOutput) GoString() string {
	return s.String()
}

// SetBillCategoryParent sets the BillCategoryParent field's value.
func (s *ListForListBillOverviewByProdOutput) SetBillCategoryParent(v string) *ListForListBillOverviewByProdOutput {
	s.BillCategoryParent = &v
	return s
}

// SetBillPeriod sets the BillPeriod field's value.
func (s *ListForListBillOverviewByProdOutput) SetBillPeriod(v string) *ListForListBillOverviewByProdOutput {
	s.BillPeriod = &v
	return s
}

// SetBillingMode sets the BillingMode field's value.
func (s *ListForListBillOverviewByProdOutput) SetBillingMode(v string) *ListForListBillOverviewByProdOutput {
	s.BillingMode = &v
	return s
}

// SetBusinessMode sets the BusinessMode field's value.
func (s *ListForListBillOverviewByProdOutput) SetBusinessMode(v string) *ListForListBillOverviewByProdOutput {
	s.BusinessMode = &v
	return s
}

// SetCouponAmount sets the CouponAmount field's value.
func (s *ListForListBillOverviewByProdOutput) SetCouponAmount(v string) *ListForListBillOverviewByProdOutput {
	s.CouponAmount = &v
	return s
}

// SetCreditCarriedAmount sets the CreditCarriedAmount field's value.
func (s *ListForListBillOverviewByProdOutput) SetCreditCarriedAmount(v string) *ListForListBillOverviewByProdOutput {
	s.CreditCarriedAmount = &v
	return s
}

// SetDiscountBillAmount sets the DiscountBillAmount field's value.
func (s *ListForListBillOverviewByProdOutput) SetDiscountBillAmount(v string) *ListForListBillOverviewByProdOutput {
	s.DiscountBillAmount = &v
	return s
}

// SetOriginalBillAmount sets the OriginalBillAmount field's value.
func (s *ListForListBillOverviewByProdOutput) SetOriginalBillAmount(v string) *ListForListBillOverviewByProdOutput {
	s.OriginalBillAmount = &v
	return s
}

// SetOwnerCustomerName sets the OwnerCustomerName field's value.
func (s *ListForListBillOverviewByProdOutput) SetOwnerCustomerName(v string) *ListForListBillOverviewByProdOutput {
	s.OwnerCustomerName = &v
	return s
}

// SetOwnerID sets the OwnerID field's value.
func (s *ListForListBillOverviewByProdOutput) SetOwnerID(v string) *ListForListBillOverviewByProdOutput {
	s.OwnerID = &v
	return s
}

// SetOwnerUserName sets the OwnerUserName field's value.
func (s *ListForListBillOverviewByProdOutput) SetOwnerUserName(v string) *ListForListBillOverviewByProdOutput {
	s.OwnerUserName = &v
	return s
}

// SetPaidAmount sets the PaidAmount field's value.
func (s *ListForListBillOverviewByProdOutput) SetPaidAmount(v string) *ListForListBillOverviewByProdOutput {
	s.PaidAmount = &v
	return s
}

// SetPayableAmount sets the PayableAmount field's value.
func (s *ListForListBillOverviewByProdOutput) SetPayableAmount(v string) *ListForListBillOverviewByProdOutput {
	s.PayableAmount = &v
	return s
}

// SetPayerCustomerName sets the PayerCustomerName field's value.
func (s *ListForListBillOverviewByProdOutput) SetPayerCustomerName(v string) *ListForListBillOverviewByProdOutput {
	s.PayerCustomerName = &v
	return s
}

// SetPayerID sets the PayerID field's value.
func (s *ListForListBillOverviewByProdOutput) SetPayerID(v string) *ListForListBillOverviewByProdOutput {
	s.PayerID = &v
	return s
}

// SetPayerUserName sets the PayerUserName field's value.
func (s *ListForListBillOverviewByProdOutput) SetPayerUserName(v string) *ListForListBillOverviewByProdOutput {
	s.PayerUserName = &v
	return s
}

// SetPreferentialBillAmount sets the PreferentialBillAmount field's value.
func (s *ListForListBillOverviewByProdOutput) SetPreferentialBillAmount(v string) *ListForListBillOverviewByProdOutput {
	s.PreferentialBillAmount = &v
	return s
}

// SetProduct sets the Product field's value.
func (s *ListForListBillOverviewByProdOutput) SetProduct(v string) *ListForListBillOverviewByProdOutput {
	s.Product = &v
	return s
}

// SetProductZh sets the ProductZh field's value.
func (s *ListForListBillOverviewByProdOutput) SetProductZh(v string) *ListForListBillOverviewByProdOutput {
	s.ProductZh = &v
	return s
}

// SetRoundBillAmount sets the RoundBillAmount field's value.
func (s *ListForListBillOverviewByProdOutput) SetRoundBillAmount(v string) *ListForListBillOverviewByProdOutput {
	s.RoundBillAmount = &v
	return s
}

// SetSellerCustomerName sets the SellerCustomerName field's value.
func (s *ListForListBillOverviewByProdOutput) SetSellerCustomerName(v string) *ListForListBillOverviewByProdOutput {
	s.SellerCustomerName = &v
	return s
}

// SetSellerID sets the SellerID field's value.
func (s *ListForListBillOverviewByProdOutput) SetSellerID(v string) *ListForListBillOverviewByProdOutput {
	s.SellerID = &v
	return s
}

// SetSellerUserName sets the SellerUserName field's value.
func (s *ListForListBillOverviewByProdOutput) SetSellerUserName(v string) *ListForListBillOverviewByProdOutput {
	s.SellerUserName = &v
	return s
}

// SetSettlementType sets the SettlementType field's value.
func (s *ListForListBillOverviewByProdOutput) SetSettlementType(v string) *ListForListBillOverviewByProdOutput {
	s.SettlementType = &v
	return s
}

// SetUnpaidAmount sets the UnpaidAmount field's value.
func (s *ListForListBillOverviewByProdOutput) SetUnpaidAmount(v string) *ListForListBillOverviewByProdOutput {
	s.UnpaidAmount = &v
	return s
}
