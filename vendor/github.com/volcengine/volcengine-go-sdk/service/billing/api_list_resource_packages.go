// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package billing

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListResourcePackagesCommon = "ListResourcePackages"

// ListResourcePackagesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListResourcePackagesCommon operation. The "output" return
// value will be populated with the ListResourcePackagesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListResourcePackagesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListResourcePackagesCommon Send returns without error.
//
// See ListResourcePackagesCommon for more information on using the ListResourcePackagesCommon
// API call, and error handling.
//
//    // Example sending a request using the ListResourcePackagesCommonRequest method.
//    req, resp := client.ListResourcePackagesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) ListResourcePackagesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListResourcePackagesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListResourcePackagesCommon API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation ListResourcePackagesCommon for usage and error information.
func (c *BILLING) ListResourcePackagesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListResourcePackagesCommonRequest(input)
	return out, req.Send()
}

// ListResourcePackagesCommonWithContext is the same as ListResourcePackagesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListResourcePackagesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) ListResourcePackagesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListResourcePackagesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListResourcePackages = "ListResourcePackages"

// ListResourcePackagesRequest generates a "volcengine/request.Request" representing the
// client's request for the ListResourcePackages operation. The "output" return
// value will be populated with the ListResourcePackagesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListResourcePackagesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListResourcePackagesCommon Send returns without error.
//
// See ListResourcePackages for more information on using the ListResourcePackages
// API call, and error handling.
//
//    // Example sending a request using the ListResourcePackagesRequest method.
//    req, resp := client.ListResourcePackagesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) ListResourcePackagesRequest(input *ListResourcePackagesInput) (req *request.Request, output *ListResourcePackagesOutput) {
	op := &request.Operation{
		Name:       opListResourcePackages,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListResourcePackagesInput{}
	}

	output = &ListResourcePackagesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListResourcePackages API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation ListResourcePackages for usage and error information.
func (c *BILLING) ListResourcePackages(input *ListResourcePackagesInput) (*ListResourcePackagesOutput, error) {
	req, out := c.ListResourcePackagesRequest(input)
	return out, req.Send()
}

// ListResourcePackagesWithContext is the same as ListResourcePackages with the addition of
// the ability to pass a context and additional request options.
//
// See ListResourcePackages for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) ListResourcePackagesWithContext(ctx volcengine.Context, input *ListResourcePackagesInput, opts ...request.Option) (*ListResourcePackagesOutput, error) {
	req, out := c.ListResourcePackagesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListForListResourcePackagesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AvailableAmount *string `type:"string" json:",omitempty"`

	BillTime *string `type:"string" json:",omitempty"`

	ConfigurationCode *string `type:"string" json:",omitempty"`

	ConfigurationName *string `type:"string" json:",omitempty"`

	EffectiveTime *string `type:"string" json:",omitempty"`

	ExpiryTime *string `type:"string" json:",omitempty"`

	InstanceName *string `type:"string" json:",omitempty"`

	InstanceNo *string `type:"string" json:",omitempty"`

	OwnerID *string `type:"string" json:",omitempty"`

	PackageType *string `type:"string" json:",omitempty"`

	Product *string `type:"string" json:",omitempty"`

	ProductName *string `type:"string" json:",omitempty"`

	RegionCode *string `type:"string" json:",omitempty"`

	ResetByNaturalMonth *string `type:"string" json:",omitempty"`

	ResetPeriod *string `type:"string" json:",omitempty"`

	SpecCalculateFactor *string `type:"string" json:",omitempty"`

	Specification *string `type:"string" json:",omitempty"`

	SpecificationUnit *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty" enum:"EnumOfStatusForListResourcePackagesOutput"`

	SubjectNo *string `type:"string" json:",omitempty"`

	TotalAmount *string `type:"string" json:",omitempty"`

	Unit *string `type:"string" json:",omitempty"`

	UserName *string `type:"string" json:",omitempty"`

	ZoneCode *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListForListResourcePackagesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListForListResourcePackagesOutput) GoString() string {
	return s.String()
}

// SetAvailableAmount sets the AvailableAmount field's value.
func (s *ListForListResourcePackagesOutput) SetAvailableAmount(v string) *ListForListResourcePackagesOutput {
	s.AvailableAmount = &v
	return s
}

// SetBillTime sets the BillTime field's value.
func (s *ListForListResourcePackagesOutput) SetBillTime(v string) *ListForListResourcePackagesOutput {
	s.BillTime = &v
	return s
}

// SetConfigurationCode sets the ConfigurationCode field's value.
func (s *ListForListResourcePackagesOutput) SetConfigurationCode(v string) *ListForListResourcePackagesOutput {
	s.ConfigurationCode = &v
	return s
}

// SetConfigurationName sets the ConfigurationName field's value.
func (s *ListForListResourcePackagesOutput) SetConfigurationName(v string) *ListForListResourcePackagesOutput {
	s.ConfigurationName = &v
	return s
}

// SetEffectiveTime sets the EffectiveTime field's value.
func (s *ListForListResourcePackagesOutput) SetEffectiveTime(v string) *ListForListResourcePackagesOutput {
	s.EffectiveTime = &v
	return s
}

// SetExpiryTime sets the ExpiryTime field's value.
func (s *ListForListResourcePackagesOutput) SetExpiryTime(v string) *ListForListResourcePackagesOutput {
	s.ExpiryTime = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *ListForListResourcePackagesOutput) SetInstanceName(v string) *ListForListResourcePackagesOutput {
	s.InstanceName = &v
	return s
}

// SetInstanceNo sets the InstanceNo field's value.
func (s *ListForListResourcePackagesOutput) SetInstanceNo(v string) *ListForListResourcePackagesOutput {
	s.InstanceNo = &v
	return s
}

// SetOwnerID sets the OwnerID field's value.
func (s *ListForListResourcePackagesOutput) SetOwnerID(v string) *ListForListResourcePackagesOutput {
	s.OwnerID = &v
	return s
}

// SetPackageType sets the PackageType field's value.
func (s *ListForListResourcePackagesOutput) SetPackageType(v string) *ListForListResourcePackagesOutput {
	s.PackageType = &v
	return s
}

// SetProduct sets the Product field's value.
func (s *ListForListResourcePackagesOutput) SetProduct(v string) *ListForListResourcePackagesOutput {
	s.Product = &v
	return s
}

// SetProductName sets the ProductName field's value.
func (s *ListForListResourcePackagesOutput) SetProductName(v string) *ListForListResourcePackagesOutput {
	s.ProductName = &v
	return s
}

// SetRegionCode sets the RegionCode field's value.
func (s *ListForListResourcePackagesOutput) SetRegionCode(v string) *ListForListResourcePackagesOutput {
	s.RegionCode = &v
	return s
}

// SetResetByNaturalMonth sets the ResetByNaturalMonth field's value.
func (s *ListForListResourcePackagesOutput) SetResetByNaturalMonth(v string) *ListForListResourcePackagesOutput {
	s.ResetByNaturalMonth = &v
	return s
}

// SetResetPeriod sets the ResetPeriod field's value.
func (s *ListForListResourcePackagesOutput) SetResetPeriod(v string) *ListForListResourcePackagesOutput {
	s.ResetPeriod = &v
	return s
}

// SetSpecCalculateFactor sets the SpecCalculateFactor field's value.
func (s *ListForListResourcePackagesOutput) SetSpecCalculateFactor(v string) *ListForListResourcePackagesOutput {
	s.SpecCalculateFactor = &v
	return s
}

// SetSpecification sets the Specification field's value.
func (s *ListForListResourcePackagesOutput) SetSpecification(v string) *ListForListResourcePackagesOutput {
	s.Specification = &v
	return s
}

// SetSpecificationUnit sets the SpecificationUnit field's value.
func (s *ListForListResourcePackagesOutput) SetSpecificationUnit(v string) *ListForListResourcePackagesOutput {
	s.SpecificationUnit = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ListForListResourcePackagesOutput) SetStatus(v string) *ListForListResourcePackagesOutput {
	s.Status = &v
	return s
}

// SetSubjectNo sets the SubjectNo field's value.
func (s *ListForListResourcePackagesOutput) SetSubjectNo(v string) *ListForListResourcePackagesOutput {
	s.SubjectNo = &v
	return s
}

// SetTotalAmount sets the TotalAmount field's value.
func (s *ListForListResourcePackagesOutput) SetTotalAmount(v string) *ListForListResourcePackagesOutput {
	s.TotalAmount = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *ListForListResourcePackagesOutput) SetUnit(v string) *ListForListResourcePackagesOutput {
	s.Unit = &v
	return s
}

// SetUserName sets the UserName field's value.
func (s *ListForListResourcePackagesOutput) SetUserName(v string) *ListForListResourcePackagesOutput {
	s.UserName = &v
	return s
}

// SetZoneCode sets the ZoneCode field's value.
func (s *ListForListResourcePackagesOutput) SetZoneCode(v string) *ListForListResourcePackagesOutput {
	s.ZoneCode = &v
	return s
}

type ListResourcePackagesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	EffectiveTimeBegin *string `type:"string" json:",omitempty"`

	EffectiveTimeEnd *string `type:"string" json:",omitempty"`

	// MaxResults is a required field
	MaxResults *string `type:"string" json:",omitempty" required:"true"`

	NextToken *string `type:"string" json:",omitempty"`

	Product *string `type:"string" json:",omitempty"`

	// ResourceType is a required field
	ResourceType *string `type:"string" json:",omitempty" required:"true" enum:"EnumOfResourceTypeForListResourcePackagesInput"`

	Status *string `type:"string" json:",omitempty" enum:"EnumOfStatusForListResourcePackagesInput"`
}

// String returns the string representation
func (s ListResourcePackagesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListResourcePackagesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListResourcePackagesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListResourcePackagesInput"}
	if s.MaxResults == nil {
		invalidParams.Add(request.NewErrParamRequired("MaxResults"))
	}
	if s.ResourceType == nil {
		invalidParams.Add(request.NewErrParamRequired("ResourceType"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetEffectiveTimeBegin sets the EffectiveTimeBegin field's value.
func (s *ListResourcePackagesInput) SetEffectiveTimeBegin(v string) *ListResourcePackagesInput {
	s.EffectiveTimeBegin = &v
	return s
}

// SetEffectiveTimeEnd sets the EffectiveTimeEnd field's value.
func (s *ListResourcePackagesInput) SetEffectiveTimeEnd(v string) *ListResourcePackagesInput {
	s.EffectiveTimeEnd = &v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListResourcePackagesInput) SetMaxResults(v string) *ListResourcePackagesInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListResourcePackagesInput) SetNextToken(v string) *ListResourcePackagesInput {
	s.NextToken = &v
	return s
}

// SetProduct sets the Product field's value.
func (s *ListResourcePackagesInput) SetProduct(v string) *ListResourcePackagesInput {
	s.Product = &v
	return s
}

// SetResourceType sets the ResourceType field's value.
func (s *ListResourcePackagesInput) SetResourceType(v string) *ListResourcePackagesInput {
	s.ResourceType = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ListResourcePackagesInput) SetStatus(v string) *ListResourcePackagesInput {
	s.Status = &v
	return s
}

type ListResourcePackagesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	List []*ListForListResourcePackagesOutput `type:"list" json:",omitempty"`

	NextToken *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListResourcePackagesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListResourcePackagesOutput) GoString() string {
	return s.String()
}

// SetList sets the List field's value.
func (s *ListResourcePackagesOutput) SetList(v []*ListForListResourcePackagesOutput) *ListResourcePackagesOutput {
	s.List = v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListResourcePackagesOutput) SetNextToken(v string) *ListResourcePackagesOutput {
	s.NextToken = &v
	return s
}

const (
	// EnumOfResourceTypeForListResourcePackagesInputPackage is a EnumOfResourceTypeForListResourcePackagesInput enum value
	EnumOfResourceTypeForListResourcePackagesInputPackage = "Package"

	// EnumOfResourceTypeForListResourcePackagesInputRi is a EnumOfResourceTypeForListResourcePackagesInput enum value
	EnumOfResourceTypeForListResourcePackagesInputRi = "RI"

	// EnumOfResourceTypeForListResourcePackagesInputRsc is a EnumOfResourceTypeForListResourcePackagesInput enum value
	EnumOfResourceTypeForListResourcePackagesInputRsc = "RSC"
)

const (
	// EnumOfStatusForListResourcePackagesInputEffective is a EnumOfStatusForListResourcePackagesInput enum value
	EnumOfStatusForListResourcePackagesInputEffective = "Effective"

	// EnumOfStatusForListResourcePackagesInputNotEffective is a EnumOfStatusForListResourcePackagesInput enum value
	EnumOfStatusForListResourcePackagesInputNotEffective = "NotEffective"

	// EnumOfStatusForListResourcePackagesInputFailedToCreate is a EnumOfStatusForListResourcePackagesInput enum value
	EnumOfStatusForListResourcePackagesInputFailedToCreate = "FailedToCreate"

	// EnumOfStatusForListResourcePackagesInputUsedUp is a EnumOfStatusForListResourcePackagesInput enum value
	EnumOfStatusForListResourcePackagesInputUsedUp = "UsedUp"

	// EnumOfStatusForListResourcePackagesInputExpired is a EnumOfStatusForListResourcePackagesInput enum value
	EnumOfStatusForListResourcePackagesInputExpired = "Expired"

	// EnumOfStatusForListResourcePackagesInputRefunded is a EnumOfStatusForListResourcePackagesInput enum value
	EnumOfStatusForListResourcePackagesInputRefunded = "Refunded"
)

const (
	// EnumOfStatusForListResourcePackagesOutputEffective is a EnumOfStatusForListResourcePackagesOutput enum value
	EnumOfStatusForListResourcePackagesOutputEffective = "Effective"

	// EnumOfStatusForListResourcePackagesOutputNotEffective is a EnumOfStatusForListResourcePackagesOutput enum value
	EnumOfStatusForListResourcePackagesOutputNotEffective = "NotEffective"

	// EnumOfStatusForListResourcePackagesOutputFailedToCreate is a EnumOfStatusForListResourcePackagesOutput enum value
	EnumOfStatusForListResourcePackagesOutputFailedToCreate = "FailedToCreate"

	// EnumOfStatusForListResourcePackagesOutputUsedUp is a EnumOfStatusForListResourcePackagesOutput enum value
	EnumOfStatusForListResourcePackagesOutputUsedUp = "UsedUp"

	// EnumOfStatusForListResourcePackagesOutputExpired is a EnumOfStatusForListResourcePackagesOutput enum value
	EnumOfStatusForListResourcePackagesOutputExpired = "Expired"

	// EnumOfStatusForListResourcePackagesOutputRefunded is a EnumOfStatusForListResourcePackagesOutput enum value
	EnumOfStatusForListResourcePackagesOutputRefunded = "Refunded"
)
