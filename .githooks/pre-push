#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local oid> <remote ref> <remote oid>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

#remote="$1"
#url="$2"
#printf "\033[32m 推送前需要检查当前项目可以 go build 通过 \033[0m\n"

echo "→run golangci-lint..."
echo

# 运行 golangci-lint 检查工具
golangci-lint run ./... -c .golangci.yml
if [ $? -ne 0 ]; then
    printf "\033[31mPUSH FAILED \033[0m\n"
    exit 1
fi

printf "\033[32mPUSH SUCCEEDED \033[0m\n"
echo

exit 0